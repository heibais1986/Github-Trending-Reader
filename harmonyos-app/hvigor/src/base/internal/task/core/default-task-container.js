"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.DefaultTaskContainer=void 0;const hvigor_log_js_1=require("../../../log/hvigor-log.js"),task_directed_acyclic_graph_js_1=require("./task-directed-acyclic-graph.js");class DefaultTaskContainer{constructor(t,s){this._log=hvigor_log_js_1.HvigorLogger.getLogger(DefaultTaskContainer.name),this._moduleName=t,this._tasks=new Map,this._taskGraph=s}registryTask(t){throw new Error("Method not implemented.")}getTaskPaths(){return[...this._tasks.keys()]}registerTask(t){throw new Error("Method not implemented.")}getTaskDepends(t){const s=this.findTask(t);if(!s)throw new Error(`Task not found ${t}.`);return s.getDependsOn()}addTask(t){const s=t.getName();this._tasks.has(s)&&this._log.printErrorExit("DUPLICATE_TASK",[s,t.getPath()]),this._tasks.set(s,t),this._taskGraph.addNode(t.getPath()),task_directed_acyclic_graph_js_1.projectTaskDag.addNode(t.getPath())}deleteTask(t){if(this.hasTask(t)){const s=this._tasks.get(t).getPath();return this._taskGraph.removeNode(s),task_directed_acyclic_graph_js_1.projectTaskDag.removeNode(s),this._tasks.delete(t),!0}return!1}findTask(t){return this._tasks.get(t)}getAllTasks(){return[...this._tasks.values()]}hasTask(t){return this._tasks.has(t)}clearTasks(){this._tasks.clear(),this._taskGraph.clear()}}exports.DefaultTaskContainer=DefaultTaskContainer;
"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Strategies=void 0;const fs_extra_1=__importDefault(require("fs-extra")),hvigor_common_1=require("@ohos/hvigor-common"),types_js_1=require("./types.js"),util_js_1=require("./util.js"),inputHandler=(e,t,{inputs:r})=>{const n=["number","string","boolean"],o=null!=t?t:"";n.includes(typeof o)||Array.isArray(o)&&o.every(e=>n.includes(typeof e))?r.set(e,o):r.set(e,(0,hvigor_common_1.hash)(JSON.stringify(o)))},inputsHandler=(e,t,r)=>{if(t instanceof Map)for(const[n,o]of t)inputHandler(`${e}-${n}`,o,r);else util_js_1.incrementalDeclaratorLogger.debug(`Decorator @Inputs can only be used for 'Map', but get '${(0,util_js_1.getType)(t)}' from '${e}'.`)},inputFileHandler=(e,t,{inputFiles:r},n)=>{"string"==typeof t?""!==t&&fs_extra_1.default.existsSync(t)?r.addEntry(t,n?{...n}:void 0):util_js_1.incrementalDeclaratorLogger.debug(`File: '${t}' from '${e}' is not exists, just ignore.`):util_js_1.incrementalDeclaratorLogger.debug(`Decorator @InputFile can only be used for 'String', but get '${(0,util_js_1.getType)(t)}' from '${e}'.`)},inputFilesHandler=(e,t,r,n)=>{Array.isArray(t)?t.forEach(t=>{inputFileHandler(e,t,r,n)}):util_js_1.incrementalDeclaratorLogger.debug(`Decorator @InputFiles can only be used for 'Array', but get '${(0,util_js_1.getType)(t)}' from '${e}'.`)},outputFileHandler=(e,t,{outputFiles:r},n)=>{"string"==typeof t?""!==t?r.addEntry(t,n?{...n}:void 0):util_js_1.incrementalDeclaratorLogger.debug(`Decorator @OutputFile get empty string from '${e}', just ignore.`):util_js_1.incrementalDeclaratorLogger.debug(`Decorator @OutputFile can only be used for 'String', but get '${(0,util_js_1.getType)(t)}' from '${e}'.`)},outputFilesHandler=(e,t,r,n)=>{Array.isArray(t)?t.forEach(t=>{outputFileHandler(e,t,r,n)}):util_js_1.incrementalDeclaratorLogger.debug(`Decorator @OutputFiles can only be used for 'Array', but get '${(0,util_js_1.getType)(t)}' from '${e}'.`)},ignoreSuperIncrementalHandler=(e,t,{ignoreDecoratorTypes:r})=>{const n={declareInputs:[types_js_1.IncrementalDecoratorType.Input,types_js_1.IncrementalDecoratorType.Inputs],declareInputFiles:[types_js_1.IncrementalDecoratorType.InputFile,types_js_1.IncrementalDecoratorType.InputFiles],declareOutputFiles:[types_js_1.IncrementalDecoratorType.OutputFile,types_js_1.IncrementalDecoratorType.OutputFiles]},o=Object.keys(n);o.includes(e)?n[e].forEach(e=>{r.add(e)}):util_js_1.incrementalDeclaratorLogger.debug(`Decorator @IgnoreSuperIncremental can only be used for '${o.join(", ")}'`)};exports.Strategies={[types_js_1.IncrementalDecoratorType.Input]:inputHandler,[types_js_1.IncrementalDecoratorType.Inputs]:inputsHandler,[types_js_1.IncrementalDecoratorType.InputFile]:inputFileHandler,[types_js_1.IncrementalDecoratorType.InputFiles]:inputFilesHandler,[types_js_1.IncrementalDecoratorType.OutputFile]:outputFileHandler,[types_js_1.IncrementalDecoratorType.OutputFiles]:outputFilesHandler,[types_js_1.IncrementalDecoratorType.IgnoreSuperIncremental]:ignoreSuperIncrementalHandler};
"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.CollectDebugSymbol=void 0;const os_1=__importDefault(require("os")),path_1=__importDefault(require("path")),process_1=__importDefault(require("process")),hvigor_1=require("@ohos/hvigor"),fs_extra_1=__importDefault(require("fs-extra")),build_directory_const_js_1=require("../const/build-directory-const.js"),common_const_js_1=require("../const/common-const.js"),ohos_logger_js_1=require("../utils/log/ohos-logger.js"),task_names_js_1=require("./common/task-names.js"),ohos_hap_task_js_1=require("./task/ohos-hap-task.js");class CollectDebugSymbol extends ohos_hap_task_js_1.OhosHapTask{constructor(e){var t,s;super(e,task_names_js_1.TaskNames.Task.COLLECT_DEBUG_SYMBOL),this._log=ohos_logger_js_1.OhosLogger.getLogger(CollectDebugSymbol.name),this.RELEASE="release",this.DEBUG="debug",this._taskService=e,this.isRelease=!(null===(t=e.getBuildOption())||void 0===t?void 0:t.debuggable),this.shouldCollectDebugSymbol=null!==(s=hvigor_1.hvigorCore.getParameter().getProperty(common_const_js_1.CommonConst.USE_COLLECT_DEBUG_SYMBOL))&&void 0!==s?s:this.isRelease,this.modulePath=this.pathInfo.getModulePath(),this.debugSymbolPath=this.pathInfo.getSymbolsDir(this.modulePath)}declareInputFiles(){const e=new hvigor_1.FileSet;return fs_extra_1.default.existsSync(this.pathInfo.getSourceMapOriginPath(this.targetService))&&e.addEntry(this.pathInfo.getSourceMapOriginPath(this.targetService)),fs_extra_1.default.existsSync(this.getNameCachePath())&&e.addEntry(this.getNameCachePath()),fs_extra_1.default.existsSync(this.pathInfo.getIntermediatesProcessLibs())&&e.addEntry(this.pathInfo.getIntermediatesProcessLibs(),{isDirectory:!0}),e}declareOutputFiles(){return this.debugSymbolPath?(new hvigor_1.FileSet).addEntry(this.debugSymbolPath,{isDirectory:!0}):new hvigor_1.FileSet}async beforeAlwaysAction(){var e,t;this.isRelease=!(null===(e=this._taskService.getBuildOption())||void 0===e?void 0:e.debuggable),this.shouldCollectDebugSymbol=null!==(t=hvigor_1.hvigorCore.getParameter().getProperty(common_const_js_1.CommonConst.USE_COLLECT_DEBUG_SYMBOL))&&void 0!==t?t:this.isRelease}taskShouldDo(){return this.shouldCollectDebugSymbol}doTaskAction(){if(fs_extra_1.default.ensureDirSync(this.getDestinationPath()),fs_extra_1.default.existsSync(this.pathInfo.getSourceMapIntermediatePath())){const e=this.pathInfo.getSourceMapIntermediatePath();fs_extra_1.default.copyFileSync(e,path_1.default.resolve(this.getDestinationPath(),`${this.getModuleName()}-${build_directory_const_js_1.BuildArtifactConst.SOURCEMAPS_MAP}`))}else{const e=this.pathInfo.getSourceMapOriginPath(this.targetService);fs_extra_1.default.existsSync(e)?fs_extra_1.default.copyFileSync(e,path_1.default.resolve(this.getDestinationPath(),`${this.getModuleName()}-${build_directory_const_js_1.BuildArtifactConst.SOURCEMAPS_MAP}`)):this._log.debug(`${build_directory_const_js_1.BuildArtifactConst.SOURCEMAPS_MAP} for module ${this.getModuleName()} does not exist`)}const e=this.getNameCachePath();fs_extra_1.default.existsSync(e)?fs_extra_1.default.copyFileSync(e,path_1.default.resolve(this.getDestinationPath(),`${this.getModuleName()}-${build_directory_const_js_1.BuildArtifactConst.NAME_CACHE}`)):this._log.debug(`${build_directory_const_js_1.BuildArtifactConst.NAME_CACHE} for module ${this.getModuleName()} does not exists`),this.createSymbolicLinkForSoFolder()}initTaskDepends(){}getDestinationPath(){const e=this.isRelease?path_1.default.resolve(this.debugSymbolPath,this.RELEASE):path_1.default.resolve(this.debugSymbolPath,this.DEBUG);return fs_extra_1.default.existsSync(e)||fs_extra_1.default.mkdirSync(e,{recursive:!0}),e}getNameCachePath(){return path_1.default.resolve(this.pathInfo.getModuleBuildCachePath(),`${this.targetName}@${this.getCompileArkFolderName()}`,"esmodule","release","obfuscation",build_directory_const_js_1.BuildArtifactConst.NAME_CACHE)}createSymbolicLinkForSoFolder(){const e="win32"===process_1.default.platform||"Windows_NT"===os_1.default.type()?"junction":"dir",t=this.pathInfo.getIntermediatesProcessLibs();if(fs_extra_1.default.existsSync(t)){const s=fs_extra_1.default.readdirSync(t,{withFileTypes:!0}).filter(e=>e.isDirectory()).map(e=>e.name);0===s.length&&this._log.debug(`There are no cpp libraries for module ${this.getModuleName()}`),s.forEach(s=>{const o=path_1.default.resolve(t,s),i=path_1.default.resolve(this.getDestinationPath(),s);try{fs_extra_1.default.existsSync(i)||fs_extra_1.default.symlinkSync(o,i,e)}catch(e){this._log.warn(`Create symbolic link for ${o} failed. Reason: ${e}`)}})}}getCompileArkFolderName(){return this.targetService.getModuleService().getModuleModel().isHarModule()?"HarCompileArkTS":"CompileArkTS"}getModuleName(){return this.targetService.getModuleService().getModuleModel().getName()}}exports.CollectDebugSymbol=CollectDebugSymbol;
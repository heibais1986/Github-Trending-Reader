"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,i,r){void 0===r&&(r=i);var o=Object.getOwnPropertyDescriptor(t,i);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,r,o)}:function(e,t,i,r){void 0===r&&(r=i),e[r]=t[i]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i in e)"default"!==i&&Object.prototype.hasOwnProperty.call(e,i)&&__createBinding(t,e,i);return __setModuleDefault(t,e),t},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.processLibs=exports.applyForSelectionRule=exports.filterBySelection=exports.buildLibs=void 0;const child_process_1=require("child_process"),crypto_1=require("crypto"),fs_1=require("fs"),path_1=__importDefault(require("path")),stream_1=require("stream"),hvigor_1=require("@ohos/hvigor"),fs=__importStar(require("fs-extra")),minimatch=__importStar(require("minimatch")),file_util_js_1=require("../../utils/file-util.js"),ohos_logger_js_1=require("../../utils/log/ohos-logger.js"),logger=ohos_logger_js_1.OhosLogger.getLogger("NativeStrip"),whiteListLibs=["libc++_shared.so"],buildLibs=(e,t,i)=>e.map(e=>({name:path_1.default.basename(e),path:path_1.default.resolve(i,e),relativePath:e,pkgName:t.getPackageName(),pkgVersion:t.getDependencyVersion(),isLocal:t.isLocal(),selected:0})).filter(e=>!fs.lstatSync(e.path).isDirectory());exports.buildLibs=buildLibs;const filterBySelection=(e,t)=>(0===t.length||t.forEach(t=>(0,exports.applyForSelectionRule)(e,t)),e);exports.filterBySelection=filterBySelection;const applyForSelectionRule=(e,t)=>{var i,r;const o=e.filter(e=>e.pkgName===t.package).filter(e=>!t.version||e.pkgVersion===t.version),s=o.filter(e=>t.include.includes(e.name));let a;s.forEach(e=>e.selected=1),s.length>0&&(a=s.map(e=>e.name).join(", "),logger.debug(`Selection rule :${t.package}:${null!==(i=t.version)&&void 0!==i?i:""}:include hit for ${a}`));const n=o.filter(e=>{var i;return null===(i=t.exclude)||void 0===i?void 0:i.includes(e.name)});n.forEach(e=>e.selected=2),n.length>0&&(a=n.map(e=>e.name).join(", "),logger.debug(`Selection rule:${t.package}:${null!==(r=t.version)&&void 0!==r?r:""}:exclude hit for ${a}`))};async function processLibs(e){var t,i;const r=[...e.allHarLibs.reverse(),...e.outputLibs,...e.cangjieLibs,...e.localLibs];(0,exports.filterBySelection)(r,null!==(i=null===(t=e.filterRule)||void 0===t?void 0:t.select)&&void 0!==i?i:[]);const{excludes:o,pickFirsts:s,pickLasts:a,enableOverride:n}={excludes:[],pickFirsts:[],pickLasts:[],enableOverride:!1,...e.filterRule};fs.emptyDirSync(e.outputDir);const l=new Map,c=[];r.forEach(e=>{if(2!==e.selected&&!c.includes(e.relativePath)){if(1===e.selected)return l.set(e.relativePath,[e.path]),void c.push(e.relativePath);if(o.some(t=>minimatch.default(e.relativePath,t)))logger.debug(`The filter condition excludes matched ${e.path}.`);else{if(!a.some(t=>minimatch.default(e.relativePath,t))||!l.has(e.relativePath))return s.some(t=>minimatch.default(e.relativePath,t))||n?(l.set(e.relativePath,[e.path]),void logger.debug(`The filter condition pickFirsts or enableOverride matched ${e.path}.`)):void(l.has(e.relativePath)?l.get(e.relativePath).push(e.path):l.set(e.relativePath,[e.path]));logger.debug(`The filter condition pickLasts matched ${e.path}.`)}}}),await checkDuplicatedNativeLibs(l,e.profilePath,e.moduleName);for(const[t,i]of l)await file_util_js_1.FileUtil.linkFile(i.pop(),path_1.default.resolve(e.outputDir,t));e.isHarType||"true"!==hvigor_1.hvigorCore.getExtraConfig().get("ohos-enable-hwasan")||(await checkCompiledLibs(e),await checkPrecompileLibs(e))}async function checkPrecompileLibs(e){const t=getNativeLibs(e),i=compareLibraryObjects(await getSubFolderLibs(e.outputDir),t),r=await getNoHwasanLibs(i,e.readElf);r.length&&logHwasanWarning(r)}function getNativeLibs(e){var t;const i={};return null===(t=e.nativeLibs)||void 0===t||t.forEach(t=>{t.forEach(t=>{const r=t.getAbi(),o=t.getNameOnDisk();if(e.localOutputDir&&r){const t=path_1.default.resolve(e.localOutputDir,r);t&&o&&(i[t]?i[t].push(o):i[t]=[o])}})}),i}async function checkCompiledLibs(e){var t;if(null===(t=e.compileCommandsPath)||void 0===t?void 0:t.length)for(const t of e.compileCommandsPath)try{const e=await fs.promises.readFile(path_1.default.resolve(t),"utf8"),i=JSON.parse(e).filter(e=>e.command&&"string"==typeof e.command&&!e.command.includes("fsanitize=hwaddress")).map(e=>e.file);i.length&&logHwasanWarning(i)}catch(e){logger.debug(e)}}function logHwasanWarning(e){logger.warn(`HWASAN is not enabled for the following products: \n  ${e.join("\n  ")}\n  Check the compilation script and ensure that the HWASAN of all native products is enabled.`)}async function getNoHwasanLibs(e,t){const i=[];for(const r in e)if(Object.prototype.hasOwnProperty.call(e,r))for(const o of e[r])try{const e=o.includes(".a"),s=e?"-s":"-d",a=e?"__hwasan_init":"libclang_rt.hwasan.so",{stdout:n}=await execPromise(`"${t}" ${s} "${r}${path_1.default.sep}${o}"`);!n.includes(a)&&i.push(`${r}${path_1.default.sep}${o}`)}catch(e){logger.warn(`Error executing HwasanLibs check for ${o}: ${e}`)}return i}function execPromise(e){return new Promise((t,i)=>{(0,child_process_1.exec)(e,(e,r,o)=>e?(logger.debug(`exec error: ${e.message}`),void i(new Error(`exec error: ${e.message}`))):o?(logger.debug(`stderr: ${o}`),void i(new Error(`stderr: ${o}`))):void t({stdout:r}))})}function compareLibraryObjects(e,t){const i={};for(const r in e)if(Object.prototype.hasOwnProperty.call(e,r)){const o=e[r],s=Object.keys(t).find(e=>getLastPathSegment(r)===getLastPathSegment(e));if(s){const e=t[s],a=o.filter(t=>!e.includes(t));a.length>0&&(i[r]=a.filter(e=>!whiteListLibs.includes(e)))}else i[r]=o.filter(e=>!whiteListLibs.includes(e))}return i}function getLastPathSegment(e){const t=e.split(path_1.default.sep);return t[t.length-1]}async function getSubFolderLibs(e){if(!e)return{};try{const t=await fs.promises.readdir(e),i={};return await Promise.all(t.map(async t=>{const r=path_1.default.join(e,t);i[r]=await fs.promises.readdir(r)})),i}catch(e){return logger.debug("Error reading output directory:",e),{}}}async function checkDuplicatedNativeLibs(e,t,i){const r=[];for(const t of e.keys()){const i=e.get(t),o=path_1.default.basename(t);if(i&&i.length>1&&"libc++.so"!==o&&"libc++_shared.so"!==o){const e=await removeDuplicateFiles(i);if(e.length<2)continue;r.push(...e)}}if(r.length){const e=r.reduce((e,t)=>`${e}- ${t}\n`,"");logger.printErrorExit("DUPLICATED_FILES_DOUND_IN_LIBPATH",[i,e.trimEnd()])}}async function removeDuplicateFiles(e){if(e.length<2)return e;const t=[];for(const i of e)await collectUniqueFile(i,t);return t.map(e=>e.file)}async function collectUniqueFile(e,t){var i;const r=fs.lstatSync(e),o=r.isSymbolicLink()?await fs.readlink(e):e;if(0!==t.length)for(const s of t){const a=`${e} | ${s.file}`;if(!fs.existsSync(o)){logger.debug(`Invalid file or symlink '${e}'.`);continue}if(o===s.file){logger.debug(`SymbolicLink relation between ${a}.`);continue}if(r.size!==s.stats.size){logger.debug(`Different file size for ${a}.`),t.push({file:o,stats:r});continue}const n=await computeFileHash(o);s.hash=null!==(i=s.hash)&&void 0!==i?i:await computeFileHash(s.file),n===s.hash?logger.debug(`Same checksum for ${a}.`):(logger.debug(`Different checksum for ${a}.`),t.push({file:o,stats:r,hash:n}))}else t.push({file:o,stats:r})}async function computeFileHash(e){const t=(0,crypto_1.createHash)("MD5");return new Promise(i=>(0,stream_1.pipeline)((0,fs_1.createReadStream)(e),t,()=>i(t.digest("hex"))))}exports.applyForSelectionRule=applyForSelectionRule,exports.processLibs=processLibs;
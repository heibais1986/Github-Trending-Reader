"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.SignRemoteHsp=void 0;const hvigor_1=require("@ohos/hvigor"),fs_extra_1=__importDefault(require("fs-extra")),path_1=__importDefault(require("path")),build_directory_const_js_1=require("../const/build-directory-const.js"),common_const_js_1=require("../const/common-const.js"),sign_type_enum_js_1=require("../enum/sign-type-enum.js"),ohos_logger_js_1=require("../utils/log/ohos-logger.js"),remote_hsp_utils_js_1=require("../utils/remote-hsp-utils.js"),base_sign_js_1=require("./base/base-sign.js"),global_project_data_service_js_1=require("./service/global-project-data-service.js"),sign_model_js_1=require("./sign/command-builder-impl/sign-model.js"),sign_job_js_1=require("./worker/sign-job.js"),sign_util_js_1=require("./sign/sign-util.js");class SignRemoteHsp extends base_sign_js_1.BaseSign{constructor(e,t,s){super(e,t,s),this.allProjectSignedRemoteHspList=[],this.allModuleSignedRemoteHspList=[],this.allProjectRequiredSignRemoteHspMap=new Map,this.allModuleRequiredSignRemoteHspMap=new Map,this.allProjectHspPathList=[],this.allModuleHspPathList=[],this.allProjectRemoteHspPathList=[],this.allModuleRemoteHspPathList=[],this._log=ohos_logger_js_1.OhosLogger.getLoggerWithDurationId(SignRemoteHsp.name,this.durationEvent.getId());const i=this.projectModel.getCacheRemoteHspPath(this.targetData.getProduct().name);this.projectRemoteHspCachePath=path_1.default.resolve(i,common_const_js_1.CommonConst.REMOTE_HSP_CACHE)}async doTaskAction(){}declareInputFiles(){const e=super.declareInputFiles();return this.projectRemoteHspCachePath&&fs_extra_1.default.existsSync(this.projectRemoteHspCachePath)&&e.addEntry(this.projectRemoteHspCachePath,{isDirectory:!1}),e}getProjectSignRemoteHspMap(e,t){if(!fs_extra_1.default.existsSync(e))return;const s=fs_extra_1.default.readdirSync(e);for(const i of s){const s=path_1.default.resolve(e,i),a=(0,remote_hsp_utils_js_1.getRemoteHspObj)(s,i,this.log);a&&t.forEach(e=>{e.getPackageName()===a.hspName&&this.allProjectRequiredSignRemoteHspMap.set(a.hspFileName,{...a})})}}createProjectRemoteHspCache(){(0,sign_util_js_1.isSigned)(this.projectModel)&&(fs_extra_1.default.existsSync(this.projectRemoteHspCachePath)||(fs_extra_1.default.createFileSync(this.projectRemoteHspCachePath),fs_extra_1.default.writeJsonSync(this.projectRemoteHspCachePath,{})))}getModuleSignRemoteHspMap(e,t){if(!fs_extra_1.default.existsSync(e))return;const s=fs_extra_1.default.readdirSync(e);for(const i of s){const s=path_1.default.resolve(e,i),a=(0,remote_hsp_utils_js_1.getRemoteHspObj)(s,i,this.log);a&&t.forEach(e=>{e.getPackageName()===a.hspName&&this.allModuleRequiredSignRemoteHspMap.set(a.hspFileName,{...a})})}}initAllSignRemoteHspList(e,t,s,i){const a=this.targetData.isHarmonyOS()?sign_type_enum_js_1.SignTypeEnum.HOS_HAP:sign_type_enum_js_1.SignTypeEnum.HAP,o=this.projectModel.getCacheRemoteHspPath(this.targetData.getProduct().name);i.forEach(i=>{const r=i.hspFileName,n=i.hspPath,_=i.hspDirName,l=r.replace(build_directory_const_js_1.BuildArtifactExtension.DOT_HSP,`-signed${build_directory_const_js_1.BuildArtifactExtension.DOT_HSP}`),g=path_1.default.resolve(o,_,l);if(global_project_data_service_js_1.GlobalProjectDataService.getInstance().needSignedRemoteHsp(_,this.moduleModel.getName())){const o=this.projectModel.getCacheIntegratedHspPath(this.targetData.getProduct().name),l=i.isIntegratedHsp?path_1.default.resolve(o,_,r):n;t.push(l),e.push(g),s.push(new sign_model_js_1.SignModel(a,l,g)),global_project_data_service_js_1.GlobalProjectDataService.getInstance().setNeedSignedRemoteHspMap(_,{hspFileName:r,hspDirName:_,version:i.hspVersion,hspPath:l,signedHspPath:g,isSigned:!1})}})}initDefaultSignConfig(e,t,s){return{signCommand:t,moduleName:this.service.getModuleModel().getName(),signType:e.getSignType(),bundleName:this.signUtil.getBundleNameFromHap(this.projectModel),verifySignCommands:s}}async submitSignWorker(e,t){const s=this.signUtil.getSignCommand(e),i=this.signUtil.getVerifySignCommands(this.targetData.getPathInfo());if(!s||!i)return void this._log.debug("No signCommand, please check sign info.");const a=this.initDefaultSignConfig(e,s,i),o=path_1.default.resolve(__dirname,"./worker/sign-job.js/runSign"),r={workInput:a,callback:t};if(fs_extra_1.default.existsSync(e.getOutPutFilePath())||fs_extra_1.default.mkdirSync(path_1.default.dirname(e.getOutPutFilePath()),{recursive:!0}),this.getWorkerPool().submit(this,o,r).getState()===hvigor_1.TaskState.REJECT){const t="sign remote hsp",s=this.durationEvent.createSubEvent(t,"");s.start(),this._log.debug("Worker dispatch failed, running native strip on main thread."),await this.signUtil.validateBundleName(e,this.targetData.getPathInfo(),s),await(0,sign_job_js_1.runSign)(a),s.stop(),s.setLog(t,hvigor_1.MetricLogType.INFO)}}signRemoteHspCallBack(e,t){if(global_project_data_service_js_1.GlobalProjectDataService.getInstance().changeRemoteHspSigned(t),global_project_data_service_js_1.GlobalProjectDataService.getInstance().allRemoteHspSigned()){const t=global_project_data_service_js_1.GlobalProjectDataService.getInstance().getRemoteHspCache();fs_extra_1.default.writeJsonSync(e,{signingConfig:t.signingConfig,signedRemoteHsps:Object.fromEntries(t.signedRemoteHsps)})}}initTaskDepends(){}}exports.SignRemoteHsp=SignRemoteHsp;
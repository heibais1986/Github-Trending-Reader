"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.SignHqf=void 0;const path_1=__importDefault(require("path")),fs_extra_1=__importDefault(require("fs-extra")),sign_type_enum_js_1=require("../enum/sign-type-enum.js"),ohos_logger_js_1=require("../utils/log/ohos-logger.js"),task_names_js_1=require("./common/task-names.js"),package_hqf_js_1=require("./package-hqf.js"),sign_model_js_1=require("./sign/command-builder-impl/sign-model.js"),sign_util_js_1=require("./sign/sign-util.js"),ohos_hap_task_js_1=require("./task/ohos-hap-task.js"),logger=ohos_logger_js_1.OhosLogger.getLogger("SignHqf");class SignHqf extends ohos_hap_task_js_1.OhosHapTask{constructor(e){super(e,task_names_js_1.TaskNames.Task.SIGN_HQF)}async doTaskAction(){const e=path_1.default.resolve(this.pathInfo.getModuleBuildOutputPath(),(0,sign_util_js_1.getHqfName)(this.moduleName,this.targetName,!1)),t=(0,sign_util_js_1.getHqfName)(this.moduleName,this.targetName,!0),s=path_1.default.resolve(this.pathInfo.getModuleBuildOutputPath(),t),i=new sign_model_js_1.SignModel(sign_type_enum_js_1.SignTypeEnum.HQF,e,s),a=new sign_util_js_1.SignUtil(this.service,sign_type_enum_js_1.SignTypeEnum.HQF,this.pathInfo,this.targetData.getProduct(),this.sdkInfo);await a.sign(i,this.durationEvent),a._signingConfig&&await this.updateQuickfixLog(t)}initTaskDepends(){this.declareDepends(package_hqf_js_1.PackageHqf.name)}async updateQuickfixLog(e){const t=path_1.default.resolve(this.pathInfo.getModuleBuildOutputPath(),"quickfix.json");if(!fs_extra_1.default.existsSync(t))return;const s=await fs_extra_1.default.readJSON(t,{encoding:"utf-8"});s.file=e,await fs_extra_1.default.writeJSON(t,s)}getPatchConfigMode(){var e;const t=this.pathInfo.getBuildConfigPath();if(fs_extra_1.default.existsSync(t)){const s=fs_extra_1.default.readJsonSync(t);return null===(e=null==s?void 0:s.patchConfig)||void 0===e?void 0:e.mode}logger.error(`${t} is not exists`)}}exports.SignHqf=SignHqf;
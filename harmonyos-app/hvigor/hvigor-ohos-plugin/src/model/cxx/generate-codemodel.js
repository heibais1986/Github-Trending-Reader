"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.GenerateCodemodel=void 0;const fs_extra_1=__importDefault(require("fs-extra")),path_1=__importDefault(require("path")),json_util_js_1=require("../../utils/json-util.js"),ohos_logger_js_1=require("../../utils/log/ohos-logger.js");class GenerateCodemodel{constructor(e){this._log=ohos_logger_js_1.OhosLogger.getLogger(GenerateCodemodel.name),this.reply=path_1.default.resolve(e,".cmake","api","v1","reply"),this.index=this.readIndex(),this._codemodel=this.generateCodemodel()}getCodemodel(){return this._codemodel}getObjFromIndex(e){return Object.values(this.index.reply).filter(t=>t.kind===e).map(e=>(0,json_util_js_1.getJson5Obj)(path_1.default.resolve(this.reply,e.jsonFile))).shift()}generateCodemodel(){const e=this.readCodemodel(this.index.reply);return this.readTarget(e),e}readCodemodel(e){if(!e||!e["codemodel-v2"])return void this._log.warn("Failed to generate CMake code mode. The native code will skip compiling.");const t=e["codemodel-v2"],r=null==t?void 0:t.jsonFile;if(!r)return;const o=path_1.default.resolve(this.reply,r);return(0,json_util_js_1.getJson5Obj)(o)}readIndex(){fs_extra_1.default.existsSync(this.reply)||this._log.printErrorExit("CMAKE_TASK_EXECUTION_FAILED");const e=fs_extra_1.default.readdirSync(this.reply).find(e=>e.startsWith("index-"));return e||this._log.printErrorExit("CMAKE_FILE_API_PARSE_FAILED",[this.reply],[[this.reply]]),(0,json_util_js_1.getJson5Obj)(path_1.default.resolve(this.reply,e))}readTarget(e){var t;null===(t=null==e?void 0:e.configurations)||void 0===t||t.forEach(e=>{var t;if(e.targets)for(let r=0;r<(null===(t=e.targets)||void 0===t?void 0:t.length);r++){const t=e.targets[r].jsonFile;if(!t)return;e.targets[r]=(0,json_util_js_1.getJson5Obj)(path_1.default.resolve(this.reply,t))}})}}exports.GenerateCodemodel=GenerateCodemodel;
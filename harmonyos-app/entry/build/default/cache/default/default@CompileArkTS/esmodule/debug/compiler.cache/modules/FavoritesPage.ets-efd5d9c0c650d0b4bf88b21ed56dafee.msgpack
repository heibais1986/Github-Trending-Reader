‘r@ü™assertions§code¥customTransformCache¨dependencies¢id§meta±moduleSideEffects¨originalCode±originalSourcemap´resolvedIdsÆsourcemapChainµsyntheticNamedExportsµtransformDependenciesÆtransformFiles®cacheAst‘rAê⁄O if (!("finalizeConstruction" in ViewPU.prototype)) {
    Reflect.set(ViewPU.prototype, "finalizeConstruction", () => { });
}
/**
 * Favorites page
 */
import router from '@ohos.router';
import { createFavoritesManager } from '../models';
class FavoritesPage extends ViewPU {
    constructor(parent, params, __localStorage, elmtId = -1, paramsLambda = undefined, extraInfo) {
        super(parent, __localStorage, elmtId, extraInfo);
        if (typeof paramsLambda === "function") {
            this.paramsGenerator_ = paramsLambda;
        }
        this.__favoriteItems = new ObservedPropertyObjectPU([], this, "favoriteItems");
        this.__isLoading = new ObservedPropertySimplePU(true, this, "isLoading");
        this.__isEmpty = new ObservedPropertySimplePU(true, this, "isEmpty");
        this.favoritesManager = createFavoritesManager();
        this.setInitiallyProvidedValue(params);
        this.finalizeConstruction();
    }
    setInitiallyProvidedValue(params) {
        if (params.favoriteItems !== undefined) {
            this.favoriteItems = params.favoriteItems;
        }
        if (params.isLoading !== undefined) {
            this.isLoading = params.isLoading;
        }
        if (params.isEmpty !== undefined) {
            this.isEmpty = params.isEmpty;
        }
        if (params.favoritesManager !== undefined) {
            this.favoritesManager = params.favoritesManager;
        }
    }
    updateStateVars(params) {
    }
    purgeVariableDependenciesOnElmtId(rmElmtId) {
        this.__favoriteItems.purgeDependencyOnElmtId(rmElmtId);
        this.__isLoading.purgeDependencyOnElmtId(rmElmtId);
        this.__isEmpty.purgeDependencyOnElmtId(rmElmtId);
    }
    aboutToBeDeleted() {
        this.__favoriteItems.aboutToBeDeleted();
        this.__isLoading.aboutToBeDeleted();
        this.__isEmpty.aboutToBeDeleted();
        SubscriberManager.Get().delete(this.id__());
        this.aboutToBeDeletedInternal();
    }
    get favoriteItems() {
        return this.__favoriteItems.get();
    }
    set favoriteItems(newValue) {
        this.__favoriteItems.set(newValue);
    }
    get isLoading() {
        return this.__isLoading.get();
    }
    set isLoading(newValue) {
        this.__isLoading.set(newValue);
    }
    get isEmpty() {
        return this.__isEmpty.get();
    }
    set isEmpty(newValue) {
        this.__isEmpty.set(newValue);
    }
    aboutToAppear() {
        this.loadFavorites();
    }
    /**
     * Âä†ËΩΩÊî∂ËóèÂàóË°®
     */
    loadFavorites() {
        this.isLoading = true;
        try {
            this.favoriteItems = this.favoritesManager.getFavorites();
            this.isEmpty = this.favoriteItems.length === 0;
            console.info('FavoritesPage', 'Âä†ËΩΩÊî∂Ëóè:', this.favoriteItems.length, 'Êù°');
        }
        catch (error) {
            console.error('FavoritesPage', 'Âä†ËΩΩÊî∂ËóèÂ§±Ë¥•:', error);
            this.isEmpty = true;
        }
        finally {
            this.isLoading = false;
        }
    }
    /**
     * ÂØºËà™Âà∞‰ªìÂ∫ìËØ¶ÊÉÖ
     */
    navigateToRepositoryDetail(repository) {
        try {
            router.pushUrl({
                url: 'pages/WebViewPage',
                params: {
                    url: repository.htmlUrl || '',
                    title: repository.name
                }
            });
        }
        catch (error) {
            console.error('FavoritesPage', 'ÂØºËà™Â§±Ë¥•:', error);
        }
    }
    /**
     * ‰ªéÊî∂Ëóè‰∏≠ÁßªÈô§
     */
    removeFromFavorites(repositoryId) {
        this.favoritesManager.removeFromFavorites(repositoryId);
        this.loadFavorites(); // ÈáçÊñ∞Âä†ËΩΩ
    }
    /**
     * Ê†ºÂºèÂåñÊó•Êúü
     */
    formatDate(date) {
        const now = new Date();
        const diff = now.getTime() - date.getTime();
        const days = Math.floor(diff / (1000 * 60 * 60 * 24));
        if (days === 0) {
            return '‰ªäÂ§©';
        }
        else if (days === 1) {
            return 'Êò®Â§©';
        }
        else if (days < 7) {
            return `${days}Â§©Ââç`;
        }
        else {
            return date.toLocaleDateString();
        }
    }
    initialRender() {
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Column.create();
            Column.width('100%');
            Column.height('100%');
            Column.backgroundColor('#f5f5f5');
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            // È°µÈù¢Ê†áÈ¢ò
            Row.create();
            // È°µÈù¢Ê†áÈ¢ò
            Row.width('100%');
            // È°µÈù¢Ê†áÈ¢ò
            Row.height(56);
            // È°µÈù¢Ê†áÈ¢ò
            Row.padding({ left: 16, right: 16 });
            // È°µÈù¢Ê†áÈ¢ò
            Row.backgroundColor('#f5f5f5');
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Button.createWithLabel('‚Üê');
            Button.fontSize(16);
            Button.fontColor('#333');
            Button.backgroundColor(Color.Transparent);
            Button.onClick(() => {
                router.back();
            });
        }, Button);
        Button.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('ÊàëÁöÑÊî∂Ëóè');
            Text.fontSize(20);
            Text.fontWeight(FontWeight.Bold);
            Text.fontColor('#333');
            Text.layoutWeight(1);
            Text.textAlign(TextAlign.Center);
        }, Text);
        Text.pop();
        // È°µÈù¢Ê†áÈ¢ò
        Row.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            If.create();
            // ÂÜÖÂÆπÂå∫Âüü
            if (this.isLoading) {
                this.ifElseBranchUpdateFunction(0, () => {
                    this.observeComponentCreation2((elmtId, isInitialRender) => {
                        Column.create();
                        Column.width('100%');
                        Column.height('100%');
                        Column.justifyContent(FlexAlign.Center);
                    }, Column);
                    this.observeComponentCreation2((elmtId, isInitialRender) => {
                        LoadingProgress.create();
                        LoadingProgress.width(40);
                        LoadingProgress.height(40);
                        LoadingProgress.margin({ top: 50 });
                    }, LoadingProgress);
                    this.observeComponentCreation2((elmtId, isInitialRender) => {
                        Text.create('Âä†ËΩΩ‰∏≠...');
                        Text.fontSize(16);
                        Text.fontColor('#666');
                        Text.margin({ top: 10 });
                    }, Text);
                    Text.pop();
                    Column.pop();
                });
            }
            else if (this.isEmpty) {
                this.ifElseBranchUpdateFunction(1, () => {
                    this.observeComponentCreation2((elmtId, isInitialRender) => {
                        Column.create();
                        Column.width('100%');
                        Column.height('100%');
                        Column.justifyContent(FlexAlign.Center);
                    }, Column);
                    this.observeComponentCreation2((elmtId, isInitialRender) => {
                        Text.create('ÊöÇÊó†Êî∂Ëóè');
                        Text.fontSize(18);
                        Text.fontColor('#999');
                        Text.margin({ top: 50 });
                    }, Text);
                    Text.pop();
                    this.observeComponentCreation2((elmtId, isInitialRender) => {
                        Text.create('Êî∂ËóèÁöÑ‰ªìÂ∫ì‰ºöÊòæÁ§∫Âú®ËøôÈáå');
                        Text.fontSize(14);
                        Text.fontColor('#ccc');
                        Text.margin({ top: 10 });
                    }, Text);
                    Text.pop();
                    Column.pop();
                });
            }
            else {
                this.ifElseBranchUpdateFunction(2, () => {
                    this.observeComponentCreation2((elmtId, isInitialRender) => {
                        // Êî∂ËóèÂàóË°®
                        List.create({ space: 8 });
                        // Êî∂ËóèÂàóË°®
                        List.layoutWeight(1);
                        // Êî∂ËóèÂàóË°®
                        List.padding(12);
                    }, List);
                    this.observeComponentCreation2((elmtId, isInitialRender) => {
                        ForEach.create();
                        const forEachItemGenFunction = _item => {
                            const item = _item;
                            {
                                const itemCreation = (elmtId, isInitialRender) => {
                                    ViewStackProcessor.StartGetAccessRecordingFor(elmtId);
                                    ListItem.create(deepRenderFunction, true);
                                    if (!isInitialRender) {
                                        ListItem.pop();
                                    }
                                    ViewStackProcessor.StopGetAccessRecording();
                                };
                                const itemCreation2 = (elmtId, isInitialRender) => {
                                    ListItem.create(deepRenderFunction, true);
                                };
                                const deepRenderFunction = (elmtId, isInitialRender) => {
                                    itemCreation(elmtId, isInitialRender);
                                    this.FavoriteItem.bind(this)(item);
                                    ListItem.pop();
                                };
                                this.observeComponentCreation2(itemCreation2, ListItem);
                                ListItem.pop();
                            }
                        };
                        this.forEachUpdateFunction(elmtId, this.favoriteItems, forEachItemGenFunction, (item) => item.id, false, false);
                    }, ForEach);
                    ForEach.pop();
                    // Êî∂ËóèÂàóË°®
                    List.pop();
                });
            }
        }, If);
        If.pop();
        Column.pop();
    }
    FavoriteItem(item, parent = null) {
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Column.create();
            Column.width('100%');
            Column.padding(16);
            Column.backgroundColor(Color.White);
            Column.borderRadius(8);
            Column.shadow({ radius: 2, color: '#00000010', offsetX: 0, offsetY: 1 });
            Column.onClick(() => {
                this.navigateToRepositoryDetail(item.repository);
            });
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Row.create();
            Row.width('100%');
            Row.alignItems(VerticalAlign.Center);
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            // ‰ªìÂ∫ì‰ø°ÊÅØ
            Column.create({ space: 4 });
            // ‰ªìÂ∫ì‰ø°ÊÅØ
            Column.layoutWeight(1);
            // ‰ªìÂ∫ì‰ø°ÊÅØ
            Column.alignItems(HorizontalAlign.Start);
        }, Column);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(item.repository.name);
            Text.fontSize(16);
            Text.fontWeight(FontWeight.Medium);
            Text.fontColor('#333');
            Text.maxLines(1);
            Text.textOverflow({ overflow: TextOverflow.Ellipsis });
            Text.width('100%');
            Text.textAlign(TextAlign.Start);
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(item.repository.owner?.login || '');
            Text.fontSize(14);
            Text.fontColor('#666');
            Text.maxLines(1);
            Text.textOverflow({ overflow: TextOverflow.Ellipsis });
            Text.width('100%');
            Text.textAlign(TextAlign.Start);
        }, Text);
        Text.pop();
        // ‰ªìÂ∫ì‰ø°ÊÅØ
        Column.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            // ÂèñÊ∂àÊî∂ËóèÊåâÈíÆ
            Button.createWithLabel('‚ù§Ô∏è');
            // ÂèñÊ∂àÊî∂ËóèÊåâÈíÆ
            Button.fontSize(16);
            // ÂèñÊ∂àÊî∂ËóèÊåâÈíÆ
            Button.fontColor('#ff4757');
            // ÂèñÊ∂àÊî∂ËóèÊåâÈíÆ
            Button.backgroundColor(Color.Transparent);
            // ÂèñÊ∂àÊî∂ËóèÊåâÈíÆ
            Button.width(32);
            // ÂèñÊ∂àÊî∂ËóèÊåâÈíÆ
            Button.height(32);
            // ÂèñÊ∂àÊî∂ËóèÊåâÈíÆ
            Button.onClick(() => {
                this.removeFromFavorites(item.repository.id);
            });
        }, Button);
        // ÂèñÊ∂àÊî∂ËóèÊåâÈíÆ
        Button.pop();
        Row.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            // Êî∂ËóèÊó∂Èó¥
            Text.create(`Êî∂Ëóè‰∫é ${this.formatDate(item.favoritedAt)}`);
            // Êî∂ËóèÊó∂Èó¥
            Text.fontSize(12);
            // Êî∂ËóèÊó∂Èó¥
            Text.fontColor('#999');
            // Êî∂ËóèÊó∂Èó¥
            Text.width('100%');
            // Êî∂ËóèÊó∂Èó¥
            Text.textAlign(TextAlign.Start);
            // Êî∂ËóèÊó∂Èó¥
            Text.margin({ top: 4 });
        }, Text);
        // Êî∂ËóèÊó∂Èó¥
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            If.create();
            // ‰ªìÂ∫ìÊèèËø∞
            if (item.repository.description) {
                this.ifElseBranchUpdateFunction(0, () => {
                    this.observeComponentCreation2((elmtId, isInitialRender) => {
                        Text.create(item.repository.description);
                        Text.fontSize(14);
                        Text.fontColor('#666');
                        Text.maxLines(2);
                        Text.textOverflow({ overflow: TextOverflow.Ellipsis });
                        Text.width('100%');
                        Text.textAlign(TextAlign.Start);
                        Text.margin({ top: 4 });
                    }, Text);
                    Text.pop();
                });
            }
            // Ê†áÁ≠æ
            else {
                this.ifElseBranchUpdateFunction(1, () => {
                });
            }
        }, If);
        If.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            If.create();
            // Ê†áÁ≠æ
            if (item.tags && item.tags.length > 0) {
                this.ifElseBranchUpdateFunction(0, () => {
                    this.observeComponentCreation2((elmtId, isInitialRender) => {
                        Row.create({ space: 8 });
                        Row.width('100%');
                        Row.margin({ top: 4 });
                    }, Row);
                    this.observeComponentCreation2((elmtId, isInitialRender) => {
                        ForEach.create();
                        const forEachItemGenFunction = _item => {
                            const tag = _item;
                            this.observeComponentCreation2((elmtId, isInitialRender) => {
                                Text.create(tag);
                                Text.fontSize(12);
                                Text.fontColor('#409eff');
                                Text.padding({ left: 8, right: 8, top: 2, bottom: 2 });
                                Text.backgroundColor('#e6f7ff');
                                Text.borderRadius(4);
                            }, Text);
                            Text.pop();
                        };
                        this.forEachUpdateFunction(elmtId, item.tags, forEachItemGenFunction, (tag) => tag, false, false);
                    }, ForEach);
                    ForEach.pop();
                    Row.pop();
                });
            }
            // Â§áÊ≥®
            else {
                this.ifElseBranchUpdateFunction(1, () => {
                });
            }
        }, If);
        If.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            If.create();
            // Â§áÊ≥®
            if (item.notes && item.notes.trim() !== '') {
                this.ifElseBranchUpdateFunction(0, () => {
                    this.observeComponentCreation2((elmtId, isInitialRender) => {
                        Text.create(item.notes);
                        Text.fontSize(12);
                        Text.fontColor('#666');
                        Text.fontStyle(FontStyle.Italic);
                        Text.maxLines(2);
                        Text.textOverflow({ overflow: TextOverflow.Ellipsis });
                        Text.width('100%');
                        Text.textAlign(TextAlign.Start);
                        Text.margin({ top: 4 });
                    }, Text);
                    Text.pop();
                });
            }
            // ÁªüËÆ°‰ø°ÊÅØ
            else {
                this.ifElseBranchUpdateFunction(1, () => {
                });
            }
        }, If);
        If.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            // ÁªüËÆ°‰ø°ÊÅØ
            Row.create({ space: 16 });
            // ÁªüËÆ°‰ø°ÊÅØ
            Row.width('100%');
            // ÁªüËÆ°‰ø°ÊÅØ
            Row.margin({ top: 8 });
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Row.create({ space: 4 });
        }, Row);
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create('‚≠ê');
            Text.fontSize(12);
        }, Text);
        Text.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            Text.create(item.repository.stars.toString());
            Text.fontSize(12);
            Text.fontColor('#666');
        }, Text);
        Text.pop();
        Row.pop();
        this.observeComponentCreation2((elmtId, isInitialRender) => {
            If.create();
            if (item.repository.language) {
                this.ifElseBranchUpdateFunction(0, () => {
                    this.observeComponentCreation2((elmtId, isInitialRender) => {
                        Row.create({ space: 4 });
                    }, Row);
                    this.observeComponentCreation2((elmtId, isInitialRender) => {
                        Text.create('üî§');
                        Text.fontSize(12);
                    }, Text);
                    Text.pop();
                    this.observeComponentCreation2((elmtId, isInitialRender) => {
                        Text.create(item.repository.language);
                        Text.fontSize(12);
                        Text.fontColor('#666');
                    }, Text);
                    Text.pop();
                    Row.pop();
                });
            }
            else {
                this.ifElseBranchUpdateFunction(1, () => {
                });
            }
        }, If);
        If.pop();
        // ÁªüËÆ°‰ø°ÊÅØ
        Row.pop();
        Column.pop();
    }
    rerender() {
        this.updateDirtyElements();
    }
    static getEntryName() {
        return "FavoritesPage";
    }
}
registerNamedRoute(() => new FavoritesPage(undefined, {}), "", { bundleName: "com.github.trending", moduleName: "entry", pagePath: "pages/FavoritesPage", pageFullPath: "entry/src/main/ets/pages/FavoritesPage", integratedHsp: "false", moduleType: "followWithHap" });
//# sourceMappingURL=FavoritesPage.js.map¬íŸf hvigor_ignore_D:_Program Files_Huawei_DevEco Studio_sdk_default_openharmony_ets_api_@ohos.router.d.tsŸ?D:\dev\reddit\harmonyos-app\entry\src\main\ets\models\index.etsŸFD:\dev\reddit\harmonyos-app\entry\src\main\ets\pages\FavoritesPage.ets‘rBö™moduleName±isLocalDependencyØisNodeEntryFileßpkgPath±belongProjectPathßpkgName™pkgVersion±dependencyPkgInfo∞belongModulePath¨shouldEmitJs•entry√¬Ÿ!D:\dev\reddit\harmonyos-app\entryªD:\dev\reddit\harmonyos-app•entry•1.0.0‘  Ÿ!D:\dev\reddit\harmonyos-app\entry√√⁄•/**
 * Favorites page
 */

import router from '@ohos.router';
import { createFavoritesManager, FavoriteItem } from '../models';
import { Repository } from '../models/Repository';

@Entry
@Component
struct FavoritesPage {
  @State favoriteItems: FavoriteItem[] = [];
  @State isLoading: boolean = true;
  @State isEmpty: boolean = true;
  
  private favoritesManager = createFavoritesManager();

  aboutToAppear() {
    this.loadFavorites();
  }

  /**
   * Âä†ËΩΩÊî∂ËóèÂàóË°®
   */
  private loadFavorites() {
    this.isLoading = true;
    try {
      this.favoriteItems = this.favoritesManager.getFavorites();
      this.isEmpty = this.favoriteItems.length === 0;
      console.info('FavoritesPage', 'Âä†ËΩΩÊî∂Ëóè:', this.favoriteItems.length, 'Êù°');
    } catch (error) {
      console.error('FavoritesPage', 'Âä†ËΩΩÊî∂ËóèÂ§±Ë¥•:', error);
      this.isEmpty = true;
    } finally {
      this.isLoading = false;
    }
  }

  /**
   * ÂØºËà™Âà∞‰ªìÂ∫ìËØ¶ÊÉÖ
   */
  private navigateToRepositoryDetail(repository: Repository) {
    try {
      router.pushUrl({
        url: 'pages/WebViewPage',
        params: {
          url: repository.htmlUrl || '',
          title: repository.name
        }
      });
    } catch (error) {
      console.error('FavoritesPage', 'ÂØºËà™Â§±Ë¥•:', error);
    }
  }

  /**
   * ‰ªéÊî∂Ëóè‰∏≠ÁßªÈô§
   */
  private removeFromFavorites(repositoryId: string) {
    this.favoritesManager.removeFromFavorites(repositoryId);
    this.loadFavorites(); // ÈáçÊñ∞Âä†ËΩΩ
  }

  /**
   * Ê†ºÂºèÂåñÊó•Êúü
   */
  private formatDate(date: Date): string {
    const now = new Date();
    const diff = now.getTime() - date.getTime();
    const days = Math.floor(diff / (1000 * 60 * 60 * 24));
    
    if (days === 0) {
      return '‰ªäÂ§©';
    } else if (days === 1) {
      return 'Êò®Â§©';
    } else if (days < 7) {
      return `${days}Â§©Ââç`;
    } else {
      return date.toLocaleDateString();
    }
  }

  build() {
    Column() {
      // È°µÈù¢Ê†áÈ¢ò
      Row() {
        Button('‚Üê')
          .fontSize(16)
          .fontColor('#333')
          .backgroundColor(Color.Transparent)
          .onClick(() => {
            router.back();
          })
        
        Text('ÊàëÁöÑÊî∂Ëóè')
          .fontSize(20)
          .fontWeight(FontWeight.Bold)
          .fontColor('#333')
          .layoutWeight(1)
          .textAlign(TextAlign.Center)
      }
      .width('100%')
      .height(56)
      .padding({ left: 16, right: 16 })
      .backgroundColor('#f5f5f5')

      // ÂÜÖÂÆπÂå∫Âüü
      if (this.isLoading) {
        Column() {
          LoadingProgress()
            .width(40)
            .height(40)
            .margin({ top: 50 })
          Text('Âä†ËΩΩ‰∏≠...')
            .fontSize(16)
            .fontColor('#666')
            .margin({ top: 10 })
        }
        .width('100%')
        .height('100%')
        .justifyContent(FlexAlign.Center)
      } else if (this.isEmpty) {
        Column() {
          Text('ÊöÇÊó†Êî∂Ëóè')
            .fontSize(18)
            .fontColor('#999')
            .margin({ top: 50 })
          Text('Êî∂ËóèÁöÑ‰ªìÂ∫ì‰ºöÊòæÁ§∫Âú®ËøôÈáå')
            .fontSize(14)
            .fontColor('#ccc')
            .margin({ top: 10 })
        }
        .width('100%')
        .height('100%')
        .justifyContent(FlexAlign.Center)
      } else {
        // Êî∂ËóèÂàóË°®
        List({ space: 8 }) {
          ForEach(this.favoriteItems, (item: FavoriteItem) => {
            ListItem() {
              this.FavoriteItem(item)
            }
          }, (item: FavoriteItem) => item.id)
        }
        .layoutWeight(1)
        .padding(12)
      }
    }
    .width('100%')
    .height('100%')
    .backgroundColor('#f5f5f5')
  }

  @Builder
  FavoriteItem(item: FavoriteItem) {
    Column() {
      Row() {
        // ‰ªìÂ∫ì‰ø°ÊÅØ
        Column({ space: 4 }) {
          Text(item.repository.name)
            .fontSize(16)
            .fontWeight(FontWeight.Medium)
            .fontColor('#333')
            .maxLines(1)
            .textOverflow({ overflow: TextOverflow.Ellipsis })
            .width('100%')
            .textAlign(TextAlign.Start)
          
          Text(item.repository.owner?.login || '')
            .fontSize(14)
            .fontColor('#666')
            .maxLines(1)
            .textOverflow({ overflow: TextOverflow.Ellipsis })
            .width('100%')
            .textAlign(TextAlign.Start)
        }
        .layoutWeight(1)
        .alignItems(HorizontalAlign.Start)
        
        // ÂèñÊ∂àÊî∂ËóèÊåâÈíÆ
        Button('‚ù§Ô∏è')
          .fontSize(16)
          .fontColor('#ff4757')
          .backgroundColor(Color.Transparent)
          .width(32)
          .height(32)
          .onClick(() => {
            this.removeFromFavorites(item.repository.id);
          })
      }
      .width('100%')
      .alignItems(VerticalAlign.Center)

      // Êî∂ËóèÊó∂Èó¥
      Text(`Êî∂Ëóè‰∫é ${this.formatDate(item.favoritedAt)}`)
        .fontSize(12)
        .fontColor('#999')
        .width('100%')
        .textAlign(TextAlign.Start)
        .margin({ top: 4 })

      // ‰ªìÂ∫ìÊèèËø∞
      if (item.repository.description) {
        Text(item.repository.description)
          .fontSize(14)
          .fontColor('#666')
          .maxLines(2)
          .textOverflow({ overflow: TextOverflow.Ellipsis })
          .width('100%')
          .textAlign(TextAlign.Start)
          .margin({ top: 4 })
      }

      // Ê†áÁ≠æ
      if (item.tags && item.tags.length > 0) {
        Row({ space: 8 }) {
          ForEach(item.tags, (tag: string) => {
            Text(tag)
              .fontSize(12)
              .fontColor('#409eff')
              .padding({ left: 8, right: 8, top: 2, bottom: 2 })
              .backgroundColor('#e6f7ff')
              .borderRadius(4)
          }, (tag: string) => tag)
        }
        .width('100%')
        .margin({ top: 4 })
      }

      // Â§áÊ≥®
      if (item.notes && item.notes.trim() !== '') {
        Text(item.notes)
          .fontSize(12)
          .fontColor('#666')
          .fontStyle(FontStyle.Italic)
          .maxLines(2)
          .textOverflow({ overflow: TextOverflow.Ellipsis })
          .width('100%')
          .textAlign(TextAlign.Start)
          .margin({ top: 4 })
      }

      // ÁªüËÆ°‰ø°ÊÅØ
      Row({ space: 16 }) {
        Row({ space: 4 }) {
          Text('‚≠ê')
            .fontSize(12)
          Text(item.repository.stars.toString())
            .fontSize(12)
            .fontColor('#666')
        }

        if (item.repository.language) {
          Row({ space: 4 }) {
            Text('üî§')
              .fontSize(12)
            Text(item.repository.language)
              .fontSize(12)
              .fontColor('#666')
          }
        }
      }
      .width('100%')
      .margin({ top: 8 })
    }
    .width('100%')
    .padding(16)
    .backgroundColor(Color.White)
    .borderRadius(8)
    .shadow({ radius: 2, color: '#00000010', offsetX: 0, offsetY: 1 })
    .onClick(() => {
      this.navigateToRepositoryDetail(item.repository);
    })
  }
}¿‘rCí¨@ohos.router©../models‘rDó™assertions®external¢id§meta±moduleSideEffects™resolvedByµsyntheticNamedExportsA√Ÿf hvigor_ignore_D:_Program Files_Huawei_DevEco Studio_sdk_default_openharmony_ets_api_@ohos.router.d.tsA√™oh-resolve¬DA¬Ÿ?D:\dev\reddit\harmonyos-app\entry\src\main\ets\models\index.etsA√™oh-resolve¬ì‘rEñßversion§file™sourceRootßsources•names®mappings∞FavoritesPage.js†ë±FavoritesPage.etsê‹Òêêêëî    êëî ñî   î î î î! !î" "òî   î î	 	î î! /î' 5î2 Ã@î3 ÃAíî 
î 
ëî  êêêêíî< )î> +íî8 î< "íî6 î:  ìî  î6 3î8 5êêëî 2êêêêêêêêêêêêêêêêêêêêêêêêêêêêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî 	î êêíî î ñî î î 	î î î íî î ëî êëî íî 
î óî î î 	î î î î íî î úî î 
î î î! î% î&  î6 0î7 1îÃC =îÃE ?îÃF Ã@ùî î 
î î î î î  î- 'î. (î4 .î9 3î: 4î; 5‹ î î î î î î( "î* $î1 +î3 -î7 1î8 2îÃE ?îÃF Ã@îÃL ÃFîÃN ÃHîÃQ ÃKîÃR ÃLîÃS ÃMëî	 îî î î î úî î î î î î) #î+ %î4 .î6 0î; 5î< 6î= 7óî  î  
î  î  î  î  î   ëî	 !ëî !óî "î "
î "î "î "î" "î# "ëî	 #íî $î $ëî &êëî (îî )
î )$î )%î) );íî *î *ïî +î +î +î +î +îî ,î ,î ,î( , ìî -î -î -òî .
î .î .î# .î$ .î+ .!î/ .%î1 .'ñî /
î /î /î% /î& /î* / ëî 0	ìî 1î 1î 1	ëî	 2îî 2î 2î 2î 2úî 3î 3î 3î 3î 3î) 3#î+ 3%î2 3,î4 3.î9 33î: 34î; 35ëî	 4íî 5î 5ëî 7êëî 9îî :
î :î :î$ :2öî ;î ;î ;	î ;î ;î1 ;-î2 ;.î> ;:î? ;;îÃ@ ;<òî <î <î <	î <î <î <î <î% <!íî =î =ëî ?êëî ÃAîî ÃB
î ÃBî ÃBî ÃBòî ÃCî ÃC
î ÃCî ÃCî ÃCî ÃCî ÃCî ÃCûî ÃDî ÃD
î ÃDî ÃDî ÃDî ÃDî  ÃDî" ÃDî% ÃD!î) ÃD%î* ÃD&î1 ÃD-î3 ÃD/î4 ÃD0‹ î ÃEî ÃE
î ÃEî ÃEî ÃEî ÃEî ÃEî  ÃEî$ ÃE î' ÃE#î( ÃE$î, ÃE(î/ ÃE+î1 ÃE-î4 ÃE0î6 ÃE2î9 ÃE5î; ÃE7î< ÃE8î= ÃE9î> ÃE:ñî ÃGî ÃGî ÃGî ÃGî ÃGî ÃGîî ÃHî ÃHî ÃHî ÃHëî	 ÃIñî ÃIî ÃIî ÃIî ÃIî ÃIî ÃIîî ÃJî ÃJî ÃJî ÃJëî	 ÃKñî ÃKî ÃKî ÃKî ÃKî ÃKî ÃKñî ÃLî ÃLî ÃLî ÃLî ÃLî ÃLëî	 ÃMëî ÃMóî ÃNî ÃNî ÃNî ÃNî* ÃN$î, ÃN&î- ÃN'ëî	 ÃOíî ÃPî ÃPëî ÃRêíî ÃSî ÃS
ñî ÃSî ÃS
î Ãîî Ãî
î Ãîî Ãîñî ÃSî ÃS
î Ãïî Ãïî Ãïî  Ãïñî ÃSî ÃS
î Ãñî" Ãñî# Ãñî, Ãñêêíî ÃTî ÃTíî ÃUî ÃU	íî ÃTî ÃTñî ÃUî ÃU	î Ãeî Ãeî Ãeî Ãeíî ÃTî ÃTñî ÃUî ÃU	î Ãfî Ãfî Ãfî Ãfíî ÃTî ÃTûî ÃUî ÃU	î Ãgî Ãgî Ãgî Ãgî Ãgî  Ãgî" Ãgî$ Ãgî) Ãg î+ Ãg"î- Ãg$î/ Ãg&íî ÃTî ÃTñî ÃUî ÃU	î Ãhî Ãhî  Ãhî) Ãh êêîî ÃVî ÃVî# ÃVî& ÃVñî ÃVî ÃVî ÃWî ÃWî ÃWî ÃWñî ÃVî ÃVî ÃXî ÃXî ÃXî# ÃXòî ÃVî ÃVî ÃYî" ÃYî# ÃYî( ÃY î) ÃY!î4 ÃY,óî ÃVî ÃVî ÃZî ÃZî ÃZî ÃZî  ÃZñî Ã[î Ã[î Ã[î Ã[î Ã[î Ã[íî Ã\
î Ã\êíî ÃVî ÃVêîî Ã^î Ã^î Ã^î Ã^ñî Ã^î Ã^î Ã_î Ã_î Ã_î Ã_òî Ã^î Ã^î Ã`î Ã`î Ã`î& Ã` î' Ã`!î+ Ã`%ñî Ã^î Ã^î Ãaî Ãaî Ãaî! Ãañî Ã^î Ã^î Ãbî Ãbî Ãbî Ãbòî Ã^î Ã^î Ãcî Ãcî Ãcî$ Ãcî% Ãcî+ Ãc%êíî Ã^î Ã^íî ÃTî ÃTíî ÃUî ÃU	êêíî Ãjî Ãjñî Ãkî Ãk
î Ãkî Ãkî Ãkî  Ãkêêíî Ãlî Ãlñî Ãlî Ãlî Ãv	î$ Ãvî% Ãvî+ Ãvñî Ãlî Ãlî Ãw	î% Ãwî& Ãwî, Ãwòî Ãlî Ãlî Ãx	î- Ãxî. Ãxî7 Ãx!î8 Ãx"î> Ãx(êêíî Ãm
î' Ãmñî Ãm
î' Ãmî( Ãnî- Ãnî. Ãnî0 Ãnñî Ãm
î' Ãmî( Ãoî. Ãoî/ Ãoî1 Ãoöî Ãm
î' Ãmî( Ãpî. Ãpî/ Ãpî1 Ãpî4 Ãpî6 Ãpî8 Ãpî: Ãpêêîî Ãq
î Ãqî$ Ãqî, Ãqñî Ãq
î Ãqî Ãrî% Ãrî& Ãrî( Ãrñî Ãq
î Ãqî Ãsî& Ãsî' Ãsî- Ãsöî Ãq
î Ãqî Ãtî# Ãtî$ Ãtî& Ãtî) Ãtî+ Ãtî- Ãtî/ Ãtêíî Ãq
î Ãqíî Ãlî Ãlêëî Ãyñî Ãyî Ãyî Ãyî Ãyî! Ãyî# Ãyêêíî Ãzî Ãzñî Ãzî Ãzî ÃÑ	î$ ÃÑî% ÃÑî+ ÃÑñî Ãzî Ãzî ÃÖ	î% ÃÖî& ÃÖî, ÃÖòî Ãzî Ãzî ÃÜ	î- ÃÜî. ÃÜî7 ÃÜ!î8 ÃÜ"î> ÃÜ(êêîî Ã{
î Ã{î$ Ã{î* Ã{ñî Ã{
î Ã{î Ã|î% Ã|î& Ã|î( Ã|ñî Ã{
î Ã{î Ã}î& Ã}î' Ã}î- Ã}öî Ã{
î Ã{î Ã~î# Ã~î$ Ã~î& Ã~î) Ã~î+ Ã~î- Ã~î/ Ã~êíî Ã{
î Ã{êîî Ã
î Ãî$ Ãî1 Ãñî Ã
î Ãî ÃÄî% ÃÄî& ÃÄî( ÃÄñî Ã
î Ãî ÃÅî& ÃÅî' ÃÅî- ÃÅöî Ã
î Ãî ÃÇî# ÃÇî$ ÃÇî& ÃÇî) ÃÇî+ ÃÇî- ÃÇî/ ÃÇêíî Ã
î Ãíî Ãzî Ãzêëî Ãáëî Ãáêêíî Ãàî Ãàòî Ãâî Ãâî$ Ãâî& Ãâî+ Ãâî- Ãâî. Ãâî0 Ãâíî Ãàî Ãàñî Ãâî Ãâî Ãê	î) Ãêî* Ãêî+ Ãêíî Ãàî Ãàñî Ãâî Ãâî Ãë	î$ Ãëî% Ãëî' Ãëêêíî Ãä
î Ãäêêêêêêêíî( Ããî0 Ããêêêêêêêêóî$ Ãåî( Ãåî) Ãåî5 ÃåîÃA Ãå îÃE Ãå$îÃF Ãå%íî$ Ããî, Ããêêíî  Ããî( Ããêêùî; Ãäî? ÃäîÃ@ ÃäîÃM Ãä$îÃg ÃéîÃh ÃéîÃl Ãé îÃn Ãé"îÃp Ãé$îÃq Ãé%îÃu Ãé)îÃv Ãé*îÃx Ãé,êíî Ãä
î Ãäíî Ãàî Ãàíî Ãâî Ãâêëî Ãíêêíî ÃSî ÃS
ëî Ãóîî Ãöî Ãöî Ãöî Ãö!êíî Ãõî Ãõ
ñî Ãõî Ãõ
î Õ	î Õ	
î Õ	î Õ	ñî Ãõî Ãõ
î Õ
î Õ
î Õ
î Õ
òî Ãõî Ãõ
î Õî" Õî# Õî( Õî) Õî. Õ ñî Ãõî Ãõ
î Õî Õî  Õî! Õ‹ î Ãõî Ãõ
î Õî Õî Õî Õî" Õî$ Õî% Õî' Õî, Õî. Õ î9 Õ+î; Õ-îÃB Õ4îÃD Õ6îÃE Õ7îÃG Õ9îÃN ÕÃ@îÃP ÕÃBîÃQ ÕÃCîÃS ÕÃEóî Ãõî Ãõ
î Õî Õî Õî Õî  Õöî Õî Õ
î Õî/ Õ%î0 Õ&î4 Õ*î5 Õ+î? Õ5îÃ@ Õ6îÃA Õ7íî Õî Õêêíî Ãúî Ãú	ñî Ãúî Ãú	î Ãæî Ãæî Ãæî Ãæòî Ãúî Ãú	î Ãøî Ãøî Ãøî( Ãøî) Ãø î/ Ãø&êêíî Ãùî Ãùòî Ãûî Ãûî Ãûî Ãûî! Ãûî# Ãûî$ Ãûî& Ãûíî Ãùî Ãùñî Ãûî Ãûî Ã∞	î Ã∞î  Ã∞î! Ã∞íî Ãùî Ãùòî Ãûî Ãûî Ã±	î Ã±î Ã±î- Ã±#î. Ã±$î3 Ã±)êêòî Ãü
î Ãüî Ãüî Ãüî Ãüî' Ãüî( Ãüî, Ãü#ñî Ãü
î Ãüî Ã†î Ã†î Ã†î Ã†òî Ãü
î Ãüî Ã°î Ã°î Ã°î& Ã°"î' Ã°#î- Ã°)ñî Ãü
î Ãüî Ã¢î Ã¢î Ã¢î! Ã¢ñî Ãü
î Ãüî Ã£î Ã£î Ã£î Ã£úî Ãü
î Ãüî Ã§î Ã§î Ã§î  Ã§î( Ã§$î* Ã§&î6 Ã§2î7 Ã§3î? Ã§;îÃA Ã§=ñî Ãü
î Ãüî Ã•î Ã•î Ã•î Ã•òî Ãü
î Ãüî Ã¶î Ã¶î Ã¶î$ Ã¶ î% Ã¶!î* Ã¶&êíî Ãü
î Ãüêúî Ã®
î Ã®î Ã®î Ã®î Ã®î' Ã®î( Ã®î- Ã®$î/ Ã®&î4 Ã®+î8 Ã®/î: Ã®1ñî Ã®
î Ã®î Ã©î Ã©î Ã©î Ã©ñî Ã®
î Ã®î Ã™î Ã™î Ã™î! Ã™ñî Ã®
î Ã®î Ã´î Ã´î Ã´î Ã´úî Ã®
î Ã®î Ã¨î Ã¨î Ã¨î  Ã¨î( Ã¨$î* Ã¨&î6 Ã¨2î7 Ã¨3î? Ã¨;îÃA Ã¨=ñî Ã®
î Ã®î Ã≠î Ã≠î Ã≠î Ã≠òî Ã®
î Ã®î ÃÆî ÃÆî ÃÆî$ ÃÆ î% ÃÆ!î* ÃÆ&êíî Ã®
î Ã®íî Ãùî Ãùíî Ãûî Ãûêíî Ã≥î Ã≥îî Ã¥î Ã¥î# Ã¥î' Ã¥íî Ã≥î Ã≥ñî Ã¥î Ã¥î Ãµî Ãµî Ãµî Ãµíî Ã≥î Ã≥ñî Ã¥î Ã¥î Ã∂î Ã∂î Ã∂î& Ã∂íî Ã≥î Ã≥òî Ã¥î Ã¥î Ã∑î" Ã∑î# Ã∑î( Ã∑ î) Ã∑!î4 Ã∑,íî Ã≥î Ã≥ñî Ã¥î Ã¥î Ã∏î Ã∏î Ã∏î Ã∏íî Ã≥î Ã≥ñî Ã¥î Ã¥î Ãπî Ãπî Ãπî Ãπíî Ã≥î Ã≥óî Ã¥î Ã¥î Ã∫î Ã∫î Ã∫î Ã∫î  Ã∫úî Ãªî Ãªî Ãªî( Ãª$î) Ãª%î- Ãª)î. Ãª*î8 Ãª4î9 Ãª5î; Ãª7î< Ãª8î= Ãª9íî Ãº
î Ãºêíî Ã≥î Ã≥íî Ã¥î Ã¥íî Ãúî Ãú	êíî Ã¡î Ã¡ùî Ã¬î Ã¬
î Ã¬î Ã¬î# Ã¬î$ Ã¬î. Ã¬!î/ Ã¬"î3 Ã¬&î4 Ã¬'î? Ã¬2îÃ@ Ã¬3îÃB Ã¬5íî Ã¡î Ã¡ñî Ã¬î Ã¬
î Ã√	î Ã√î Ã√î Ã√íî Ã¡î Ã¡ñî Ã¬î Ã¬
î Ãƒ	î Ãƒî Ãƒî! Ãƒíî Ã¡î Ã¡ñî Ã¬î Ã¬
î Ã≈	î Ã≈î Ã≈î Ã≈íî Ã¡î Ã¡òî Ã¬î Ã¬
î Ã∆	î Ã∆î Ã∆î$ Ã∆î% Ã∆î* Ã∆"íî Ã¡î Ã¡öî Ã¬î Ã¬
î Ã«	î Ã«î Ã«î Ã«î Ã«î Ã«î  Ã«î" Ã«êíî Ã¡î Ã¡íî Ã¬î Ã¬
êêíî Ã…î Ã…òî Ã î Ã 
î Ã î Ã î Ã î  Ã î+ Ã %î- Ã 'êêòî ÃÀî ÃÀî$ ÃÀî( ÃÀî) ÃÀî3 ÃÀî4 ÃÀî? ÃÀ(ñî ÃÀî ÃÀî ÃÃî% ÃÃî& ÃÃî( ÃÃñî ÃÀî ÃÀî ÃÕî& ÃÕî' ÃÕî- ÃÕñî ÃÀî ÃÀî ÃŒî% ÃŒî& ÃŒî' ÃŒúî ÃÀî ÃÀî Ãœî) Ãœî* Ãœî, Ãœî4 Ãœ"î6 Ãœ$îÃB Ãœ0îÃC Ãœ1îÃK Ãœ9îÃM Ãœ;ñî ÃÀî ÃÀî Ã–î" Ã–î# Ã–î) Ã–òî ÃÀî ÃÀî Ã—î& Ã—î' Ã—î0 Ã—î1 Ã—î6 Ã—$öî ÃÀî ÃÀî Ã“î# Ã“î$ Ã“î& Ã“î) Ã“î+ Ã“î, Ã“î. Ã“êíî ÃÀî ÃÀêëî Ã”íî Ã’î Ã’êêêëî Ã”êêêêíî Ã’î Ã’ûî Ã÷î Ã÷
î Ã÷î Ã÷î Ã÷î Ã÷î! Ã÷î" Ã÷î& Ã÷ î' Ã÷!î- Ã÷'î0 Ã÷*î1 Ã÷+î3 Ã÷-êêòî Ã◊î Ã◊î# Ã◊î% Ã◊î* Ã◊î, Ã◊î- Ã◊î/ Ã◊ñî Ã◊î Ã◊î Ã·	î! Ã·î" Ã·î( Ã·öî Ã◊î Ã◊î Ã‚	î" Ã‚î# Ã‚î% Ã‚î( Ã‚î* Ã‚î+ Ã‚î- Ã‚êêíî Ãÿ
î Ãÿêêêîî  ÃŸî$ ÃŸî, ÃŸî/ ÃŸñî  ÃŸî$ ÃŸî% Ã⁄î- Ã⁄î. Ã⁄î0 Ã⁄ñî  ÃŸî$ ÃŸî% Ã€î. Ã€î/ Ã€î8 Ã€"‹ î  ÃŸî$ ÃŸî% Ã‹î, Ã‹î- Ã‹î/ Ã‹î3 Ã‹î5 Ã‹î6 Ã‹ î8 Ã‹"î= Ã‹'î? Ã‹)îÃ@ Ã‹*îÃB Ã‹,îÃE Ã‹/îÃG Ã‹1îÃH Ã‹2îÃJ Ã‹4îÃP Ã‹:îÃR Ã‹<îÃS Ã‹=îÃU Ã‹?ñî  ÃŸî$ ÃŸî% Ã›î4 Ã›î5 Ã›î> Ã›(ñî  ÃŸî$ ÃŸî% Ãﬁî1 Ãﬁî2 Ãﬁî3 Ãﬁêíî ÃŸî  ÃŸêõî; Ãÿî? ÃÿîÃ@ ÃÿîÃD ÃÿîÃ^ ÃﬂîÃ_ ÃﬂîÃb ÃﬂîÃd ÃﬂîÃf ÃﬂîÃg ÃﬂîÃj Ãﬂ!êíî Ãÿ
î Ãÿíî Ã◊î Ã◊êëî Ã„íî ÃÂî ÃÂêêêëî Ã„êêêêíî ÃÂî ÃÂüî ÃÊî ÃÊ
î ÃÊî ÃÊî ÃÊî ÃÊî" ÃÊî# ÃÊî( ÃÊ"î) ÃÊ#î- ÃÊ'î/ ÃÊ)î4 ÃÊ.î6 ÃÊ0î8 ÃÊ2êêñî ÃÁî ÃÁî$ ÃÁî( ÃÁî) ÃÁî. ÃÁñî ÃÁî ÃÁî ÃËî% ÃËî& ÃËî( ÃËñî ÃÁî ÃÁî ÃÈî& ÃÈî' ÃÈî- ÃÈòî ÃÁî ÃÁî ÃÍî& ÃÍî' ÃÍî0 ÃÍî1 ÃÍî7 ÃÍ%ñî ÃÁî ÃÁî ÃÎî% ÃÎî& ÃÎî' ÃÎúî ÃÁî ÃÁî ÃÏî) ÃÏî* ÃÏî, ÃÏî4 ÃÏ"î6 ÃÏ$îÃB ÃÏ0îÃC ÃÏ1îÃK ÃÏ9îÃM ÃÏ;ñî ÃÁî ÃÁî ÃÌî" ÃÌî# ÃÌî) ÃÌòî ÃÁî ÃÁî ÃÓî& ÃÓî' ÃÓî0 ÃÓî1 ÃÓî6 ÃÓ$öî ÃÁî ÃÁî ÃÔî# ÃÔî$ ÃÔî& ÃÔî) ÃÔî+ ÃÔî, ÃÔî. ÃÔêíî ÃÁî ÃÁêëî Ãíî ÃÚî ÃÚêêêëî Ãêêêíî ÃÚî ÃÚòî ÃÛî ÃÛ	î ÃÛ
î ÃÛî ÃÛî  ÃÛî" ÃÛî$ ÃÛíî ÃÚî ÃÚñî ÃÛî ÃÛ	î Õî Õî Õî Õíî ÃÚî ÃÚöî ÃÛî ÃÛ	î Õî Õî Õî Õî Õî Õî Õî! Õêêòî ÃÙî ÃÙî ÃÙî ÃÙî ÃÙî  ÃÙî! ÃÙî# ÃÙêêîî Ãı
î Ãıî Ãıî Ãıñî Ãı
î Ãıî Ãˆî Ãˆî Ãˆî Ãˆêíî Ãı
î Ãıêõî Ã˜
î Ã˜î Ã˜î Ã˜î Ã˜î' Ã˜î( Ã˜î- Ã˜$î. Ã˜%î6 Ã˜-î8 Ã˜/ñî Ã˜
î Ã˜î Ã¯î Ã¯î Ã¯î Ã¯ñî Ã˜
î Ã˜î Ã˘î Ã˘î Ã˘î! Ã˘êíî Ã˜
î Ã˜íî ÃÙî ÃÙêêòî Ã¸î Ã¸î Ã¸î Ã¸î Ã¸î  Ã¸î( Ã¸$î* Ã¸&êêòî Ã˝
î Ã˝î# Ã˝î% Ã˝î* Ã˝î, Ã˝î- Ã˝î/ Ã˝êêîî Ã˛î Ã˛î$ Ã˛î( Ã˛ñî Ã˛î Ã˛î Ãˇî% Ãˇî& Ãˇî( Ãˇêíî Ã˛î Ã˛êòî Õ î Õ î$ Õ î( Õ î) Õ î3 Õ  î4 Õ !î< Õ )ñî Õ î Õ î Õî% Õî& Õî( Õñî Õ î Õ î Õî& Õî' Õî- Õêíî Õ î Õ íî Ã˝
î Ã˝êëî Õ	êêêëî Õ	êêíî ÃÚî ÃÚíî ÃÛî ÃÛ	íî Ãõî Ãõ
ëî Õ‘rFñßversion§fileßsourcesÆsourcesContent•names®mappings¿ë¿ë¿ê‹˙ëî    ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî  	 ëî  
 ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî   ëî    ëî  ! ëî  " ëî  # ëî  $ ëî  % ëî  & ëî  ' ëî  ( ëî  ) ëî  * ëî  + ëî  , ëî  - ëî  . ëî  / ëî  0 ëî  1 ëî  2 ëî  3 ëî  4 ëî  5 ëî  6 ëî  7 ëî  8 ëî  9 ëî  : ëî  ; ëî  < ëî  = ëî  > ëî  ? ëî  Ã@ ëî  ÃA ëî  ÃB ëî  ÃC ëî  ÃD ëî  ÃE ëî  ÃF ëî  ÃG ëî  ÃH ëî  ÃI ëî  ÃJ ëî  ÃK ëî  ÃL ëî  ÃM ëî  ÃN ëî  ÃO ëî  ÃP ëî  ÃQ ëî  ÃR ëî  ÃS ëî  ÃT ëî  ÃU ëî  ÃV ëî  ÃW ëî  ÃX ëî  ÃY ëî  ÃZ ëî  Ã[ ëî  Ã\ ëî  Ã] ëî  Ã^ ëî  Ã_ ëî  Ã` ëî  Ãa ëî  Ãb ëî  Ãc ëî  Ãd ëî  Ãe ëî  Ãf ëî  Ãg ëî  Ãh ëî  Ãi ëî  Ãj ëî  Ãk ëî  Ãl ëî  Ãm ëî  Ãn ëî  Ão ëî  Ãp ëî  Ãq ëî  Ãr ëî  Ãs ëî  Ãt ëî  Ãu ëî  Ãv ëî  Ãw ëî  Ãx ëî  Ãy ëî  Ãz ëî  Ã{ ëî  Ã| ëî  Ã} ëî  Ã~ ëî  Ã ëî  ÃÄ ëî  ÃÅ ëî  ÃÇ ëî  ÃÉ ëî  ÃÑ ëî  ÃÖ ëî  ÃÜ ëî  Ãá ëî  Ãà ëî  Ãâ ëî  Ãä ëî  Ãã ëî  Ãå ëî  Ãç ëî  Ãé ëî  Ãè ëî  Ãê ëî  Ãë ëî  Ãí ëî  Ãì ëî  Ãî ëî  Ãï ëî  Ãñ ëî  Ãó ëî  Ãò ëî  Ãô ëî  Ãö ëî  Ãõ ëî  Ãú ëî  Ãù ëî  Ãû ëî  Ãü ëî  Ã† ëî  Ã° ëî  Ã¢ ëî  Ã£ ëî  Ã§ ëî  Ã• ëî  Ã¶ ëî  Ãß ëî  Ã® ëî  Ã© ëî  Ã™ ëî  Ã´ ëî  Ã¨ ëî  Ã≠ ëî  ÃÆ ëî  ÃØ ëî  Ã∞ ëî  Ã± ëî  Ã≤ ëî  Ã≥ ëî  Ã¥ ëî  Ãµ ëî  Ã∂ ëî  Ã∑ ëî  Ã∏ ëî  Ãπ ëî  Ã∫ ëî  Ãª ëî  Ãº ëî  ÃΩ ëî  Ãæ ëî  Ãø ëî  Ã¿ ëî  Ã¡ ëî  Ã¬ ëî  Ã√ ëî  Ãƒ ëî  Ã≈ ëî  Ã∆ ëî  Ã« ëî  Ã» ëî  Ã… ëî  Ã  ëî  ÃÀ ëî  ÃÃ ëî  ÃÕ ëî  ÃŒ ëî  Ãœ ëî  Ã– ëî  Ã— ëî  Ã“ ëî  Ã” ëî  Ã‘ ëî  Ã’ ëî  Ã÷ ëî  Ã◊ ëî  Ãÿ ëî  ÃŸ ëî  Ã⁄ ëî  Ã€ ëî  Ã‹ ëî  Ã› ëî  Ãﬁ ëî  Ãﬂ ëî  Ã‡ ëî  Ã· ëî  Ã‚ ëî  Ã„ ëî  Ã‰ ëî  ÃÂ ëî  ÃÊ ëî  ÃÁ ëî  ÃË ëî  ÃÈ ëî  ÃÍ ëî  ÃÎ ëî  ÃÏ ëî  ÃÌ ëî  ÃÓ ëî  ÃÔ ëî  Ã ëî  ÃÒ ëî  ÃÚ ëî  ÃÛ ëî  ÃÙ ëî  Ãı ëî  Ãˆ ëî  Ã˜ ëî  Ã¯ ëî  Ã˘ ëî  Ã˙ ëî  Ã˚ ëî  Ã¸ ëî  Ã˝ ëî  Ã˛ ëî  Ãˇ ëî  Õ  ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ	 ëî  Õ
 ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ ëî  Õ  ëî  Õ! ëî  Õ" ëî  Õ# ëî  Õ$ ëî  Õ% ëî  Õ& ëî  Õ' ëî  Õ( ëî  Õ) ëî  Õ* ëî  Õ+ ëî  Õ, ëî  Õ- ëî  Õ. ëî  Õ/ ëî  Õ0 ëî  Õ1 ëî  Õ2 ëî  Õ3 ëî  Õ4 ëî  Õ5 ëî  Õ6 ëî  Õ7 ëî  Õ8 ëî  Õ9 ëî  Õ: ëî  Õ; ëî  Õ< ëî  Õ= ëî  Õ> ëî  Õ? ëî  Õ@ ëî  ÕA ëî  ÕB ëî  ÕC ëî  ÕD ëî  ÕE ëî  ÕF ëî  ÕG ëî  ÕH ëî  ÕI ëî  ÕJ ëî  ÕK ëî  ÕL ëî  ÕM ëî  ÕN ëî  ÕO ëî  ÕP ëî  ÕQ ëî  ÕR ëî  ÕS ëî  ÕT ëî  ÕU ëî  ÕV ëî  ÕW ëî  ÕX ëî  ÕY ëî  ÕZ ëî  Õ[ ëî  Õ\ ëî  Õ] ëî  Õ^ ëî  Õ_ ëî  Õ` ëî  Õa ëî  Õb ëî  Õc ëî  Õd ëî  Õe ëî  Õf ëî  Õg ëî  Õh ëî  Õi ëî  Õj ëî  Õk ëî  Õl ëî  Õm ëî  Õn ëî  Õo ëî  Õp ëî  Õq ëî  Õr ëî  Õs ëî  Õt ëî  Õu ëî  Õv ëî  Õw ëî  Õx ëî  Õy ëî  Õz ëî  Õ{ ëî  Õ| ëî  Õ} ëî  Õ~ ëî  Õ ëî  ÕÄ ëî  ÕÅ ëî  ÕÇ ëî  ÕÉ ëî  ÕÑ ëî  ÕÖ ëî  ÕÜ ëî  Õá ëî  Õà ëî  Õâ ëî  Õä ëî  Õã ëî  Õå ëî  Õç ëî  Õé ëî  Õè ëî  Õê ëî  Õë ëî  Õí ëî  Õì ëî  Õî ëî  Õï ëî  Õñ ëî  Õó ëî  Õò ëî  Õô ëî  Õö ëî  Õõ ëî  Õú ëî  Õù ëî  Õû ëî  Õü ëî  Õ† ëî  Õ° ëî  Õ¢ ëî  Õ£ ëî  Õ§ ëî  Õ• ëî  Õ¶ ëî  Õß ëî  Õ® ëî  Õ© ëî  Õ™ ëî  Õ´ ëî  Õ¨ ëî  Õ≠ ëî  ÕÆ ëî  ÕØ ëî  Õ∞ ëî  Õ± ëî  Õ≤ ëî  Õ≥ ëî  Õ¥ ëî  Õµ ëî  Õ∂ ëî  Õ∑ ëî  Õ∏ ëî  Õπ ëî  Õ∫ ëî  Õª ëî  Õº ëî  ÕΩ ëî  Õæ ëî  Õø ëî  Õ¿ ëî  Õ¡ ëî  Õ¬ ëî  Õ√ ëî  Õƒ ëî  Õ≈ ëî  Õ∆ ëî  Õ« ëî  Õ» ëî  Õ… ëî  Õ  ëî  ÕÀ ëî  ÕÃ ëî  ÕÕ ëî  ÕŒ ëî  Õœ ëî  Õ– ëî  Õ— ëî  Õ“ ëî  Õ” ëî  Õ‘ ëî  Õ’ ëî  Õ÷ ëî  Õ◊ ëî  Õÿ ëî  ÕŸ ëî  Õ⁄ ëî  Õ€ ëî  Õ‹ ëî  Õ› ëî  Õﬁ ëî  Õﬂ ëî  Õ‡ ëî  Õ· ëî  Õ‚ ëî  Õ„ ëî  Õ‰ ëî  ÕÂ ëî  ÕÊ ëî  ÕÁ ëî  ÕË ëî  ÕÈ ëî  ÕÍ ëî  ÕÎ ëî  ÕÏ ëî  ÕÌ ëî  ÕÓ ëî  ÕÔ ëî  Õ ëî  ÕÒ ëî  ÕÚ ëî  ÕÛ ëî  ÕÙ ëî  Õı ëî  Õˆ ëî  Õ˜ ëî  Õ¯ ëî  Õ˘ ‘rGíßmissing¶plugin√¶genAbc¬ê‘  ‘rHî≤dynamicImportCacheπexportAllDeclarationCacheªexportNamedDeclarationCache´importCacheêêêí‘rIï§type•start£end™specifiers¶source±ImportDeclarationÃùÃøë‘rJî§type•start£end•local∂ImportDefaultSpecifierÃ§Ã™‘rKî§type•start£end§name™IdentifierÃ§Ã™¶router‘rLï§type•start£end•value£rawßLiteralÃ∞Ãæ¨@ohos.routerÆ'@ohos.router'I±ImportDeclarationÃ¡ÃÙë‘rMï§type•start£end®imported•localØImportSpecifierÃ Ã‡K™IdentifierÃ Ã‡∂createFavoritesManagerK™IdentifierÃ Ã‡∂createFavoritesManagerLßLiteralÃËÃÛ©../models´'../models'